#
# Copyright (C) 2018-2019 The Lolz Kernel Project. All rights reserved.
#
# LolZ-Kernel Configuration
# Custom Kernel for HLTE Oreo and Pie based ROMs
# Author: Joshua Primero <jprimero155@gmail.com>
#
# This script is licensed under the terms of the GNU General Public 
# License version 2, as published by the Free Software Foundation, 
# and may be copied, distributed, and modified under those terms.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#

on property:sys.boot_completed=1
    stop mpdecision

    # CPUFREQ Settings   
    chown system.system /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
    chown system.system /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
    chown system.system /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
    chmod 0664 /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
    chown system.system /sys/devices/system/cpu/cpu0/online
    chmod 0664 /sys/devices/system/cpu/cpu0/online
    chown system.system /sys/devices/system/cpu/cpu1/online  
    chmod 0664 /sys/devices/system/cpu/cpu1/online
    chown system.system /sys/devices/system/cpu/cpu2/online  
    chmod 0664 /sys/devices/system/cpu/cpu2/online
    chown system.system /sys/devices/system/cpu/cpu3/online  
    chmod 0664 /sys/devices/system/cpu/cpu3/online

    # CPU0
    write /sys/devices/system/cpu/cpu0/online 1
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq 2265600
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq 268800
    write /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor lolznappy

    # CPU1
    write /sys/devices/system/cpu/cpu1/online 1
    write /sys/devices/system/cpu/cpu1/cpufreq/scaling_max_freq 2265600
    write /sys/devices/system/cpu/cpu1/cpufreq/scaling_min_freq 268800
    write /sys/devices/system/cpu/cpu1/cpufreq/scaling_governor lolznappy

    # CPU2
    write /sys/devices/system/cpu/cpu2/online 1
    write /sys/devices/system/cpu/cpu2/cpufreq/scaling_max_freq 2265600
    write /sys/devices/system/cpu/cpu2/cpufreq/scaling_min_freq 268800
    write /sys/devices/system/cpu/cpu2/cpufreq/scaling_governor lolznappy

    # CPU3
    write /sys/devices/system/cpu/cpu3/online 1
    write /sys/devices/system/cpu/cpu3/cpufreq/scaling_max_freq 2265600
    write /sys/devices/system/cpu/cpu3/cpufreq/scaling_min_freq 268800
    write /sys/devices/system/cpu/cpu3/cpufreq/scaling_governor lolznappy

    # Lolznappy Tweaks
    write /sys/devices/system/cpu/cpufreq/lolznappy/above_hispeed_delay 0
    write /sys/devices/system/cpu/cpufreq/lolznappy/hispeed_freq 0
    write /sys/devices/system/cpu/cpufreq/lolznappy/target_loads "85 652800:45 729600:50 960000:55 1190400:60 1497600:70 1728000:75 1958400:85 2265600:95"
    write /sys/devices/system/cpu/cpufreq/lolznappy/max_freq_hysteresis 100000

    # CPUsets
    write /dev/cpuset/top-app/cpus 0-3
    write /dev/cpuset/foreground/boost/cpus 0-2
    write /dev/cpuset/foreground/cpus 0-2
    write /dev/cpuset/background/cpus 0
    write /dev/cpuset/system-background/cpus 0-2

    # Add a CPUset for the mm-qcamera-daemon We 
    # want all cores for camera
    mkdir /dev/cpuset/mm-qcamera-daemon
    write /dev/cpuset/mm-qcamera-daemon/cpus 0-3
    write /dev/cpuset/mm-qcamera-daemon/mems 0
    writepid /dev/cpuset/mm-qcamera-daemon/tasks
    chown system system /dev/cpuset/mm-qcamera-daemon
    chown system system /dev/cpuset/mm-qcamera-daemon/tasks
    chmod 0664 /dev/cpuset/mm-qcamera-daemon/tasks

    # Set TCP Congestion
    chmod 0664 /proc/sys/net/ipv4/tcp_congestion_control
    write /proc/sys/net/ipv4/tcp_congestion_control "westwood"

    # Set I/O Scheduler
    write /sys/block/mmcblk1/queue/read_ahead_kb 1024
    write /sys/block/mmcblk0/queue/read_ahead_kb 1024
    write /sys/block/mmcblk1/queue/scheduler "bfq"
    write /sys/block/mmcblk0/queue/scheduler "cfq"

    # Enable RQbalance if boot completed
    write /sys/devices/system/cpu/cpuquiet/current_governor "rqbalance"

